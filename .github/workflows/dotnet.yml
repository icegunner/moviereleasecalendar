name: .NET Build and Test

on:
  push:
    tags:
      - 'v*'  # triggers only on version tags like v1.0.0, v2.1.3
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      id: vars
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Restore dependencies
      run: dotnet restore MovieReleaseCalendar.sln
    - name: Build
      run: dotnet build MovieReleaseCalendar.sln --configuration Release --no-restore
    - name: Test
      run: dotnet test MovieReleaseCalendar.sln --no-build --verbosity normal

    - name: Publish Docker image (Debug)
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -f Dockerfile.Debug -t moviereleasecalendar:debug .
    - name: Publish Docker image (Release)
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -f Dockerfile.Release -t moviereleasecalendar:release .

    # - name: Build Docker image
    #   run: |
    #     docker build --no-cache -t ghcr.io/${{ github.repository }}:latest \
    #                  -t ghcr.io/${{ github.repository }}:${{ env.VERSION }} .

    # - name: Push Docker images
    #   run: |
    #     docker push ghcr.io/${{ github.repository }}:latest
    #     docker push ghcr.io/${{ github.repository }}:${{ env.VERSION }}
